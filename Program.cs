// Задача 64: Задайте значения M и N. Напишите программу, которая выведет все натуральные числа в промежутке от M до N.

/*
void Shownums(int m, int n)                                   // метод рекрсия
{
    if (n > m)  Shownums(m, n - 1);                           // условие существования рекурсии, если выполянется вызываем саму себя
    Console.Write(n + " ");                                   // на "обратной дороге" печатаем :) 
}

Console.WriteLine("Введмте первое число");                    // сообщение о вводе первого числа
int m = Convert.ToInt32(Console.ReadLine());                  // присваиваем с конвертированием
Console.WriteLine("Введмте второе число");                    // сообщение о вводе второго числа
int n = Convert.ToInt32(Console.ReadLine());                  // присваиваем с конвертированием 
Shownums(m,n);                                                // Вызываем метод рекурсии 
*/

// Задача 66: Задайте значения M и N. Напишите программу, которая найдёт сумму натуральных элементов в промежутке от M до N.
/*
int Summ_of_nums(int m, int n)                                // метод нахождения суммы промежутка чисел
{
    Console.WriteLine("Слагаемое - "+n);                      // для удобства во время прграммирования выводим на экран
    if (n > m) return Summ_of_nums(m, n-1) + n;               // задаем условие существования рекурсии
    else return m;                                            // !!! приокончании рекурсивного цикла позвращаем первую цифру (цифру m)  он же первое слагаемое при возврате 

}

Console.WriteLine("Введмте первое число");                    // сообщение о вводе первого числа
int m = Convert.ToInt32(Console.ReadLine());                  // присваиваем с конвертированием
Console.WriteLine("Введмте второе число");                    // сообщение о вводе второго числа
int n = Convert.ToInt32(Console.ReadLine());                  // присваиваем с конвертированием 

int sum = 0;
sum = Summ_of_nums(m,n);                                            // Вызываем метод рекурсии 
Console.WriteLine("сумма всех слагаемых - " + sum);                 // выводим на экран
*/

// Задача 68: Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n. m = 2, n = 3 -> A(m,n) = 29

int Acker(int m, int n)                                       // метод функции
{
    if (m == 0) return n + 1;                                 // ретурн n + 1
    if (n == 0) return Acker(m - 1, 1);                       // ретурн с вызовом метода  аргументами 
return Acker(m - 1, Acker(m, n - 1));                         // общий ретурн с двойным вызовом метода в методе.
}

Console.WriteLine("Введмте первое число");                    // сообщение о вводе первого числа
int n = Convert.ToInt32(Console.ReadLine());                  // присваиваем с конвертированием
Console.WriteLine("Введмте второе число");                    // сообщение о вводе второго числа
int m = Convert.ToInt32(Console.ReadLine());                  // присваиваем с конвертированием 

int Ackerman = Acker(m,n);                                    // вызов метода с присвоением
Console.WriteLine("Результат вычисления - " + Ackerman);      // вывод на экран